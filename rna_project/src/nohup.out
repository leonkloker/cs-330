==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
GRU                                      [128, 200, 1]             --
├─GRU: 1-1                               [128, 200, 512]           4,927,488
├─Conv1DModel: 1-2                       [128, 200, 1]             --
│    └─ModuleList: 2-7                   --                        (recursive)
│    │    └─Conv1d: 3-1                  [128, 256, 200]           393,472
│    └─GELU: 2-2                         [128, 256, 200]           --
│    └─ModuleList: 2-7                   --                        (recursive)
│    │    └─Conv1d: 3-2                  [128, 64, 200]            49,216
│    └─GELU: 2-4                         [128, 64, 200]            --
│    └─ModuleList: 2-7                   --                        (recursive)
│    │    └─Conv1d: 3-3                  [128, 16, 200]            3,088
│    └─GELU: 2-6                         [128, 16, 200]            --
│    └─ModuleList: 2-7                   --                        (recursive)
│    │    └─Conv1d: 3-4                  [128, 1, 200]             49
│    │    └─Sigmoid: 3-5                 [128, 1, 200]             --
==========================================================================================
Total params: 5,373,313
Trainable params: 5,373,313
Non-trainable params: 0
Total mult-adds (G): 137.56
==========================================================================================
Input size (MB): 65.54
Forward/backward pass size (MB): 173.88
Params size (MB): 21.49
Estimated Total Size (MB): 260.90
==========================================================================================
Traceback (most recent call last):
  File "train_gru.py", line 65, in <module>
    for x, y1, y2 in dataloader_train:
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 265, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 142, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 142, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 171, in collate_numpy_array_fn
    return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
  File "/home/jswomley/.local/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 162, in collate_tensor_fn
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [179, 640] at entry 0 and [172, 640] at entry 108
